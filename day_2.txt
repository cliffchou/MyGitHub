1.git reset 命令既可以回退版本，也可以把暂存区的修改回退到工作区，当我们使用HEAD时表示最新的版本。

2.确实要从版本库中删除文件：
  1）git rm filename: 从版本库中删除文件 
  2）git commit -m "***"

  如果是删错了(前提是用 rm 命令进行删除的)，则版本库还有文件，因此可以轻松恢复到最新版本
  git checkout -- filename: 利用版
  
  
  本库中的版本替换工作区的版本，无论是修改还是删除，均可以“一键还原”

3.git remote add origin git@github.com:GitHub_name/local_gitname.git：将本地的仓库与远程库相关联
  git push -u origin master：把本地库的所有内容推送到远程库上，这里实际是把当前分支master推送到远程（由于远程库是空的，第一次推送master分支时加上 -u 参数）
  小结：在本地工作完全不需要考虑远程库的存在，也就是没有互联网也可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络时，再把本地文本推送一下就完成了同步，很是方便！
  
4.从远程库克隆：
  1)创建远程库
  2)在目标目录下使用 git clone 命令克隆生成一个本地库：
    $ git clone git@git@github.com:cliffchou/gitskills.git     这里cliffchou是你自己的GitHub帐户名，保证你在本地关联的是自己的远程库。gitskills是你的远程库名，而git@git@github.com:cliffchou/gitskills.git就是你的远程GitHub给出的地址，也可以用https地址，协议不同而已。
	
  注意：clone一个仓库，就必须知道仓库的地址，然后使用 git clone 命令克隆。Git支持多种协议，包括https，但是通过ssh支持的原生git协议速度最快

5.创建分支：HEAD严格来说不是指向提交，而是指向master，master才是指向提交的（总是指向最新的提交），所以HEAD指向的就是当前分支。
  鼓励大量使用分支：
  git branch 查看分支
  git branch <name> 创建分支
  git checkout <name> 切换分支
  git checkout -b <name> 创建+切换分支
  git merge <name> 合并某分支到当前分支
  git branch -d <name> 删除分支
  
6.当不同的分支各自分别有新的提交时，Git无法执行“快速合并”，只能尝试把各自的修改合并起来，但是这种合并可能会有冲突。
  $git log --graph --pretty=oneline --abbrev-commit  查看分支的合并情况
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
